name: Deploy FastAPI Application

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

      - name: Deploy to AWS EC2
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        run: |
          ssh -i ~/.ssh/deploy_key $SSH_USERNAME@$SSH_HOST << 'ENDSSH'
            # Create project directory if it doesn't exist
            mkdir -p ~/fastapi-book-project

            # Navigate to project directory
            cd ~/fastapi-book-project || exit 1

            # Check if repository exists, if not clone it
            if [ ! -d .git ]; then
              git clone https://github.com/${{ github.repository }}.git .
            fi

            # Fetch and reset to main
            git fetch --all
            git reset --hard origin/main

            # Check if docker-compose exists
            if [ ! -f docker-compose.yml ]; then
              echo "docker-compose.yml not found!"
              exit 1
            fi

            # Stop running containers
            docker-compose down || true

            # Build and start containers
            docker-compose up -d --build

            # Verify deployment
            docker ps
            
            # Check if the application is responding
            sleep 10
            curl -f http://localhost:8000/api/v1/books || echo "Warning: Application not responding"
          ENDSSH